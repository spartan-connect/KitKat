<!DOCTYPE html>
<html>
  <head>
    <link href="/assets/styles.css" rel="stylesheet" type="text/css" />
    <title>SpartanConnect - Channels</title>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" integrity="sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M" crossorigin="anonymous">
  	<script src="https://code.jquery.com/jquery-3.2.1.min.js" crossorigin="anonymous"></script>
  	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4" crossorigin="anonymous"></script>
  	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js" integrity="sha384-h0AbiXch4ZDo7tp9hKZ4TsHbi047NrKGLO3SEJAg45jXxnGIfYzk4Si90RDIqNm1" crossorigin="anonymous"></script>
  	<script src="/socket.io/socket.io.js"></script>
	<style>

		/* "main" css for channels page */
		.mainChannel {
		  margin-left: 200px;
		  padding: 0px 10px;
		}

		#channelSection {
		width: 100%;
		height: 80%;
		}
		
		/* general format for a list (list with elements) in Channels */
		#channels_list {
		height: 80vh;
		list-style: none;
		overflow-y: auto;
		}
		
		/* custom scrollbar for channels list */
		#channels_list::-webkit-scrollbar {
		width: 10px;
		}
		#channels_list::-webkit-scrollbar-track {
		background: #0055A2;
		border-radius: 10px;
		}
		#channels_list::-webkit-scrollbar-thumb {
		background: #E5A823;
		border-radius: 10px;
		}
		#channels_list::-webkit-scrollbar-thumb:hover {
		background: #E5DD23;
		}
		
		/* list of online users */
		#onlineList {
		float: right;
		width: 14%;
		height: 80%;
		background-color: #99ceff;
		border-style: solid;
		border-radius: 5px;
		border-color: #000000;
		padding-left: 2px;
		}
		
		/* the array of messages posted in the channel */
		#channels_msg_list {
		left: 10px;
		max-width: 65%;
		height: 80vh;
		overflow-y: auto;
		overflow-x: auto;
		position: relative; bottom: 0;
		padding-left: 20px;
		padding-right: 5px;
		background-color: #FFFFFF;
		border-style: solid;
		border-radius: 10px;
		border-color: #000000;
		}
		
		/* custom scrollbar for messages */
		#channels_msg_list::-webkit-scrollbar {
		width: 10px;
		}

		#channels_msg_list::-webkit-scrollbar-track {
		background: #0055A2;
		border-radius: 10px;
		}

		#channels_msg_list::-webkit-scrollbar-thumb {
		background: #E5A823;
		border-radius: 10px;
		}

		#channels_msg_list::-webkit-scrollbar-thumb:hover {
		background: #E5DD23;
		}
		
		/* section representing user's list of channels */
		#myChannels {
		float: left;
		max-width: 14%;
		height: 80vh;
		padding: 5px;
		border-style: solid;
		border-radius: 5px;
		border-color: #000000;
		background-color: #99ceff;
		}
		
		/* the text field in which the user can enter messages into */
		#message {
		left: 10px;
		overflow: auto;
		width: 85%;
		margin: auto;
		height:15%;
		position: relative; bottom: 0;
		padding-left: 20px;
		padding-right: 5px;
		resize: none;
		border-style: solid;
		border-radius: 5px;
		border-color: #000000;
		background-color: #e6f3ff;
		}
		
		/* send message [to channel] button */
		#send {
		position: relative;
		left: 10px;
		bottom: 11px;
		}
		
		/* circle representing online user */
		.onlineDot {
			height: 8px;
			width: 8px;
			border-color: #00CC00;
			border-style: solid;
			background-color: #00FF00;
			border-radius: 50%;
			display: inline-block;
		}
		
		/* circle representing offline user */
		.offlineDot {
			height: 8px;
			width: 8px;
			border-color: #757575;
			border-style: solid;
			background-color: #909090;
			border-radius: 50%;
			display: inline-block;
		}
		
		#chatTextField {
		left: 10px;
		overflow: auto;
		width: 60%;
		margin: auto;
		height:15%;
		position: relative; bottom: 0;
		}
	</style>
  </head>

  <body onload="setup()">
    <% include partials/nav.ejs %>
    <div class="mainChannel">
      <p style="color:#E5A823; font-size: 20px;"><span id="channelTitle"></span></p>
	  <script>
	  // returns desired value of the cookie with the name cookieName (the text before the "=")
	  function getCookie(cookieName) {
			var name = cookieName + "=";
			var decodedCookie = decodeURIComponent(document.cookie);
			var cookieArray = decodedCookie.split(';');
			for (var i = 0; i < cookieArray.length; i++) {
				var c = cookieArray[i];
				while (c.charAt(0) == ' ') { // keep moving until non-space is reached
					c = c.substring(1);
				}
				if (c.indexOf(name) == 0) {
					return c.substring(name.length, c.length);
				}
			}
			return "";
		}
		
		// Updates the channel title display, so that it displays the currently selected channel.
		// Uses the cookie data to determine which channel is currently selected/being viewed.
		var c = getCookie("viewedChannelTitle");
		document.getElementById("channelTitle").innerHTML = c;
		
		// this function is used to set a cookie, with cookie name and cookie's value
		function setCookie(cname, cvalue) {
			document.cookie = cname + "=" + cvalue + ";";
		}
	  </script>
	  
	  <section id = "channelSection">
		<div id="myChannels">
			Your channels
			<% channels.forEach(function(channel) { %>
				<% var channelId = channel.ID;
				var channelName = channel.name%>
				<br><br><a id="channelLink" title="Test" href = "" onclick="openChannel('<%= channelId %>', '<%= channelName %>')"><%= channelName %></a>
			<% })%>
		</div>
		<div id = "onlineList">
			<ul id="channels_list">
				<li style="font-size:20px">Online</li><br>
				<% users.forEach(function(user){ %>
					<% if (user.status == "online") {%>
					<li><span class="onlineDot"></span><%= user.name %></li>
				<% }})%>
				<br><li style="font-size:20px">Offline</li><br>
				<% users.forEach(function(user){ %>
					<% if (user.status == "offline") {%>
					<li><span class="offlineDot"></span><%= user.name %></li>
				<% }})%>
			</ul>
		</div>
		<div id="channels_msg_list">

		</div>
	  </section>
	    <div id="chatTextField">
			<br>
			<textarea id = "message" placeholder="Type message"></textarea>
			<% currentUser.forEach(function(theUsername) { %>
				<% var myUsername = theUsername.name%>
			<button id="send" onclick="setUsername('<%= myUsername %>')">Send</button>
			<% })%>
			<div class="filebutton">Send Image<input type="file" id="imagefile" accept="image/*"></div>
		</div>
	  
	</div>
	
	<script>
		// This area contains functions dealing with posting messages, and displaying the messages on the channel page.
		var socket = io();
		$(() => {
			$("#send").click(()=>{
				var myDate = new Date();
				sendMessage({name: getCookie("currentUser"), timestamp: myDate.toLocaleTimeString() + ", " + myDate.toLocaleDateString(), message: $("#message").val(), currentChannelId: getCookie("viewedChannelId")});
			})
			getMessages();
		})
		socket.on('message', addMessages)
		socket.on('user image', image);
		
		function setUsername(username) {
			setCookie("currentUser", username);
		}
		
		// called when first loading the page. Create a cookie to store information like id of channel currently being viewed
		function setup() {
			var myCookie = getCookie("viewedChannelId");
			if (myCookie == "") // if cookie doesn't exist
			{
				setCookie("viewedChannelId", -1); // instead of 0, should be the id of the first channel on the user's own list of channels that they joined
				setCookie("viewedChannelTitle", "Select a channel");
			}
			setCookie("currentUser", "undefined_Username");
		}
		
		// Note: I commented this part out because it was already declared in a <script> above, inside the html section
		// returns desired value of the cookie with the name cookieName (the text before the "=")
		/*function getCookie(cookieName) {
			var name = cookieName + "=";
			var decodedCookie = decodeURIComponent(document.cookie);
			var cookieArray = decodedCookie.split(';');
			for (var i = 0; i < cookieArray.length; i++) {
				var c = cookieArray[i];
				while (c.charAt(0) == ' ') { // keep moving until non-space is reached
					c = c.substring(1);
				}
				if (c.indexOf(name) == 0) {
					return c.substring(name.length, c.length);
				}
			}
			return "";
		}*/
		
		// Updates cookie value to given channel id and channel name/title
		function openChannel(channelId, channelName) {
			setCookie("viewedChannelId", channelId);
			setCookie("viewedChannelTitle", channelName);
		}
		
		function addMessages(message){
			if (message.currentChannelId == getCookie("viewedChannelId"))
			{
				$("#channels_msg_list").append(`<h6> ${message.name} <span style="font-size: 8px">${message.timestamp} </span></h6><p style="text-align: left"> &nbsp&nbsp&nbsp&nbsp ${message.message} </p>`)
			}
			clearTextField();
		}
		
		function getMessages(){
			$.get('http://localhost:3000/messages', (data) => {
				data.forEach(addMessages);
			})
		}

		function sendMessage(message){
			$.post('http://localhost:3000/messages', message)
		}
		
		function clearTextField() {
			document.getElementById("message").value = "";
		}
		
		function image (from, base64Image) {
    		$('#channels_msg_list').append($('<p>').append($('<b>').text(from), '<img src="' + base64Image + '"/>'));
		}
		  
		$(function () {
    		$('#imagefile').bind('change', function(e){
      			var data = e.originalEvent.target.files[0];
      			var reader = new FileReader();
      			reader.onload = function(evt){
        			image('me', evt.target.result);
        			socket.emit('user image', evt.target.result);
      			};
			  	reader.readAsDataURL(data);
    		});
  		});
		
	</script>
  
  </body>
</html>
